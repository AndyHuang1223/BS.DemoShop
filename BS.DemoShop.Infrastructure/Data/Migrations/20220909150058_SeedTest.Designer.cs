// <auto-generated />
using System;
using BS.DemoShop.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BS.DemoShop.Infrastructure.Data.Migrations
{
    [DbContext(typeof(BSDemoShopContext))]
    [Migration("20220909150058_SeedTest")]
    partial class SeedTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BS.DemoShop.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnTheMarket")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 131, DateTimeKind.Utc).AddTicks(482),
                            ImgPath = "https://picsum.photos/300/200/?random=1",
                            IsOnTheMarket = true,
                            Name = "種子商品1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 131, DateTimeKind.Utc).AddTicks(9137),
                            ImgPath = "https://picsum.photos/300/200/?random=2",
                            IsOnTheMarket = false,
                            Name = "種子商品2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 131, DateTimeKind.Utc).AddTicks(9203),
                            ImgPath = "https://picsum.photos/300/200/?random=3",
                            IsOnTheMarket = true,
                            Name = "種子商品3"
                        });
                });

            modelBuilder.Entity("BS.DemoShop.Core.Entities.ProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 134, DateTimeKind.Utc).AddTicks(8957),
                            Inventory = 100,
                            Name = "種子規格1",
                            ProductId = 1,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 134, DateTimeKind.Utc).AddTicks(9257),
                            Inventory = 10,
                            Name = "種子規格2",
                            ProductId = 1,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 134, DateTimeKind.Utc).AddTicks(9276),
                            Inventory = 8,
                            Name = "種子規格3",
                            ProductId = 1,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 134, DateTimeKind.Utc).AddTicks(9298),
                            Inventory = 18,
                            Name = "種子規格4",
                            ProductId = 2,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 134, DateTimeKind.Utc).AddTicks(9315),
                            Inventory = 0,
                            Name = "種子規格4",
                            ProductId = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 6,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 134, DateTimeKind.Utc).AddTicks(9333),
                            Inventory = 120,
                            Name = "種子規格4",
                            ProductId = 3,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 7,
                            CreatedTime = new DateTime(2022, 9, 9, 15, 0, 58, 134, DateTimeKind.Utc).AddTicks(9349),
                            Inventory = 20,
                            Name = "種子規格4",
                            ProductId = 3,
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("BS.DemoShop.Core.Entities.ProductDetail", b =>
                {
                    b.HasOne("BS.DemoShop.Core.Entities.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BS.DemoShop.Core.Entities.Product", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
